# CMakeLists.txt for Voro++ library
# Voro++ doesn't ship with CMake, so we create one for BambuStudio integration

cmake_minimum_required(VERSION 3.12)
project(voropp VERSION 0.4.6 LANGUAGES CXX)

set(CMAKE_CXX_STANDARD 11)
set(CMAKE_CXX_STANDARD_REQUIRED ON)

# Source files from voro++ src directory
# Based on official Voro++ 0.4.6 release from https://math.lbl.gov/voro++/
set(VOROPP_SOURCES
    src/c_loops.cc
    src/cell.cc
    src/common.cc
    src/container.cc
    src/container_prd.cc
    src/pre_container.cc
    src/unitcell.cc
    src/v_base.cc
    src/v_compute.cc
    src/wall.cc
)

# Note: v_base_wl.cc does NOT exist in official Voro++ 0.4.6
# The library is complete with just the above files

# Header files from voro++ src directory
# Based on official Voro++ 0.4.6 release
set(VOROPP_HEADERS
    src/c_loops.hh
    src/cell.hh
    src/common.hh
    src/config.hh
    src/container.hh
    src/container_prd.hh
    src/pre_container.hh
    src/rad_option.hh
    src/unitcell.hh
    src/v_base.hh
    src/v_compute.hh
    src/voro++.hh
    src/wall.hh
    src/worklist.hh
)

# Build static library
add_library(voropp STATIC ${VOROPP_SOURCES})

# Create alias for namespaced target
add_library(voropp::voropp ALIAS voropp)

target_include_directories(voropp PUBLIC
    $<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/src>
    $<INSTALL_INTERFACE:include>
)

# Installation
install(TARGETS voropp
    EXPORT voroppTargets
    LIBRARY DESTINATION lib
    ARCHIVE DESTINATION lib
    RUNTIME DESTINATION bin
)

# Install all headers directly to include directory (voro++ expects flat structure)
foreach(HEADER ${VOROPP_HEADERS})
    if(EXISTS "${CMAKE_CURRENT_SOURCE_DIR}/${HEADER}")
        get_filename_component(HEADER_NAME ${HEADER} NAME)
        install(FILES ${HEADER}
            DESTINATION include
            RENAME ${HEADER_NAME}
        )
    else()
        message(WARNING "Header file ${HEADER} not found, skipping installation")
    endif()
endforeach()

# Export package config
install(EXPORT voroppTargets
    FILE voroppTargets.cmake
    NAMESPACE voropp::
    DESTINATION lib/cmake/voropp
)

include(CMakePackageConfigHelpers)
write_basic_package_version_file(
    "${CMAKE_CURRENT_BINARY_DIR}/voroppConfigVersion.cmake"
    VERSION ${PROJECT_VERSION}
    COMPATIBILITY AnyNewerVersion
)

configure_package_config_file(
    "${CMAKE_CURRENT_SOURCE_DIR}/voroppConfig.cmake.in"
    "${CMAKE_CURRENT_BINARY_DIR}/voroppConfig.cmake"
    INSTALL_DESTINATION lib/cmake/voropp
)

install(FILES
    "${CMAKE_CURRENT_BINARY_DIR}/voroppConfig.cmake"
    "${CMAKE_CURRENT_BINARY_DIR}/voroppConfigVersion.cmake"
    DESTINATION lib/cmake/voropp
)
