name: Build Linux

on: [pull_request]

jobs:
  appimage-builder:
    name: Linux AppImage Build

    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v3
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y autoconf build-essential cmake curl eglexternalplatform-dev \
          extra-cmake-modules file git libcairo2-dev libcurl4-openssl-dev libdbus-1-dev libglew-dev libglu1-mesa-dev \
          libgstreamer1.0-dev libgstreamer-plugins-good1.0-dev libgstreamer-plugins-base1.0-dev gstreamer1.0-plugins-bad \
          libgtk-3-dev libmspack-dev libosmesa6-dev libsecret-1-dev libsoup2.4-dev libssl-dev libudev-dev libwayland-dev \
          libwebkit2gtk-4.0-dev libxkbcommon-dev locales locales-all m4 pkgconf sudo wayland-protocols wget 
      - name: Install dependencies from BuildLinux.sh
        shell: bash
        run: sudo ./BuildLinux.sh -ur
      - name: Fix permissions
        shell: bash
        run: sudo chown $USER -R ./
          #- name: Build deps
          #id: cache_deps
          #uses: actions/cache@v3
          #env:
          #cache-name: ${{ runner.os }}-cache-bambustudio_deps_x64
          #with:
          #path: ${{ github.workspace }}/deps/build/destdir
          #key: build-${{ env.cache-name }}

            #- if: ${{ steps.cache_deps.outputs.cache-hit != 'true' }}
            #name: Build deps
            #working-directory: ${{ github.workspace }}
            #continue-on-error: true
            #run: ./BuildLinux.sh -dsr

      - name: Build BambuStudio
        shell: bash
        run:
          ./BuildLinux.sh -rdsi
          chmod a+x ./build/BambuStudio_ubu64.AppImage

      - uses: actions/upload-artifact@v3
        with:
          name: BambuStudio_Linux
          path: './build/BambuStudio_ubu64.AppImage'
