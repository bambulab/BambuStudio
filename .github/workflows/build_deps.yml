on:
  workflow_call:
    inputs:
      cache-key:
        required: true
        type: string
      cache-path:
        required: true
        type: string
      valid-cache:
        required: true
        type: boolean
      os:
        required: true
        type: string
      arch:
        required: false
        type: string
      build-deps-only:
        required: false
        type: boolean

jobs:
  build_deps:
    name: Build Deps
    if: inputs.build-deps-only || inputs.valid-cache != true
    runs-on: ${{ inputs.os }}
    env:
      date:
    steps:

      # Setup the environment
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: 'true'

      - name: load cached deps
        uses: actions/cache@v4
        with:
          path: ${{ inputs.cache-path }}
          key: ${{ inputs.cache-key }}

      - name: setup dev on Windows
        if: inputs.os == 'windows-latest'
        uses: microsoft/setup-msbuild@v2

      - name: Get the date on Ubuntu and macOS
        if: inputs.os != 'windows-latest'
        run: echo "date=$(date +'%Y%m%d')" >> $GITHUB_ENV
        shell: bash

      - name: Get the date on Windows
        if: inputs.os == 'windows-latest'
        run: echo "date=$(Get-Date -Format 'yyyyMMdd')" | Out-File -Append -FilePath $env:GITHUB_ENV -Encoding utf8
        shell: pwsh


      # Build Dependencies
      - name: Build on Windows
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: |
            choco install strawberryperl
            mkdir ${{ github.workspace }}\deps\build
            mkdir ${{ github.workspace }}\deps\build\BambuStudio_dep
            cd "${{ github.workspace }}\deps\build"
            cmake ../ -G "Visual Studio 17 2022" -A x64 -DDESTDIR="./BambuStudio_dep" -DCMAKE_BUILD_TYPE=Release -DDEP_DEBUG=OFF
            msbuild /m ALL_BUILD.vcxproj

      - name: pack deps on Windows
        if: inputs.os == 'windows-latest'
        working-directory: ${{ github.workspace }}
        run: Compress-Archive -Path "${{ github.workspace }}\deps\build\BambuStudio_dep\*" -DestinationPath "${{ github.workspace }}\deps\build\BambuStudio_dep_win64_${{ env.date }}_vs2022.zip"
        shell: pwsh
            
        
      - name: Build on Mac ${{ inputs.arch }}
        if: inputs.os == 'macos-13'
        working-directory: ${{ github.workspace }}
        run: |
            brew install cmake git gettext automake texinfo
            brew uninstall --ignore-dependencies zstd
            mkdir -p ${{ github.workspace }}/deps/build_${{ inputs.arch }}
            mkdir -p ${{ github.workspace }}/deps/build_${{ inputs.arch }}/BambuStudio_dep_${{ inputs.arch }}
            cd ${{ github.workspace }}/deps/build_${{ inputs.arch }}
            cmake ../ -DDESTDIR="${{ github.workspace }}/deps/build_${{ inputs.arch }}/BambuStudio_dep_${{ inputs.arch }}" -DOPENSSL_ARCH="darwin64-x86_64-cc"
            make -j4
            brew install zstd


      - name: Build on Ubuntu
        if: inputs.os == 'ubuntu-20.04'
        working-directory: ${{ github.workspace }}
        run: |
            sudo apt-get update
            sudo apt-get install cmake libgl1-mesa-dev libgtk-3-dev libxkbcommon-dev libunwind-dev libfuse2 -y
            mkdir -p ${{ github.workspace }}/deps/build
            mkdir -p ${{ github.workspace }}/deps/build/destdir
            sudo ./BuildLinux.sh -ur
            sudo chown $USER -R ./
            ./BuildLinux.sh -dr
            cd deps/build
            tar -czvf BambuStudio_dep_ubuntu_$(date +"%Y%m%d").tar.gz destdir


      # Upload Artifacts
      - name: Upload Mac ${{ inputs.arch }} artifacts
        if: inputs.os == 'macos-13'
        uses: actions/upload-artifact@v4
        with:
          name: BambuStudio_dep_mac_${{ inputs.arch }}_${{ env.date }}
          path: ${{ github.workspace }}/deps/build_${{ inputs.arch }}/BambuStudio_dep*.tar.gz

      - name: Upload Windows artifacts
        if: inputs.os == 'windows-latest'
        uses: actions/upload-artifact@v4
        with:
          name: BambuStudio_dep_win64_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/BambuStudio_dep*.zip

      - name: Upload Ubuntu artifacts
        if: ${{ ! env.ACT && inputs.os == 'ubuntu-20.04' }}
        uses: actions/upload-artifact@v4
        with:
          name: BambuStudio_dep_ubuntu_${{ env.date }}
          path: ${{ github.workspace }}/deps/build/BambuStudio_dep_ubuntu_*.tar.gz

  build_Bambu:
    name: Build BambuStudio
    needs: [build_deps]
    if: ${{ !cancelled() && !inputs.build-deps-only && (inputs.valid-cache == true && needs.build_deps.result == 'skipped') || (inputs.valid-cache != true && success()) }}
    uses: ./.github/workflows/build_bambu.yml
    with:
      cache-key: ${{ inputs.cache-key }}
      cache-path: ${{ inputs.cache-path }}
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
    secrets: inherit