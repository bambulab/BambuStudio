name: Check Cache

on:
  workflow_call:
    inputs:
      os:
        required: true
        type: string
      arch:
        required: false
        type: string
      build-deps-only:
        required: false
        type: boolean
      target_arch:
        required: false
        type: string
        default: "all"

jobs:
  check_cache: # determines if there is a cache and outputs variables used in caching process
    name: Check Cache
    runs-on: ${{ inputs.os }}
    if: |
      (!startsWith(inputs.os, 'macos-')) ||
      (inputs.target_arch == 'all') ||
      (startsWith(inputs.os, 'macos-') && inputs.target_arch == inputs.arch)
    outputs:
      cache-key: ${{ steps.set_outputs.outputs.cache-key }}
      cache-path: ${{ steps.set_outputs.outputs.cache-path }}
      valid-cache: ${{ steps.cache_deps.outputs.cache-hit }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          lfs: "true"

      - name: set outputs
        id: set_outputs
        env:
          is_macos: ${{ startsWith(inputs.os, 'macos-') }}
          underscore-arch: ${{ env.is_macos && '_' || ''}}${{ env.is_macos && inputs.arch || '' }}
          dash-arch: ${{ env.is_macos && '-' || ''}}${{ env.is_macos && inputs.arch || '' }}
          dep-folder-name: ${{ (inputs.os == 'windows-latest' || env.is_macos) && 'BambuStudio_dep' || 'destdir' }}
          output-cmd: ${{ inputs.os == 'windows-latest' && '$env:GITHUB_OUTPUT' || '"$GITHUB_OUTPUT"'}}
        run: |
          echo "is_macos_resolved=${{ env.is_macos }}" # Debugging line
          echo cache-key=${{ inputs.os }}${{ env.dash-arch }}-cache-bambustudio_deps-build-${{ hashFiles('deps/**') }} >> ${{ env.output-cmd }}
          echo cache-path=${{ github.workspace }}/deps/build${{ env.underscore-arch }}/${{ env.dep-folder-name }}${{ env.underscore-arch }} >> ${{ env.output-cmd }}

      - name: load cache
        id: cache_deps
        uses: actions/cache@v4
        with:
          path: ${{ steps.set_outputs.outputs.cache-path }}
          key: ${{ steps.set_outputs.outputs.cache-key }}
          lookup-only: true

  build_deps: # call next step
    name: Build Deps
    needs: [check_cache]
    if: |
      (!startsWith(inputs.os, 'macos-')) ||
      (inputs.target_arch == 'all') ||
      (startsWith(inputs.os, 'macos-') && inputs.target_arch == inputs.arch)
    uses: ./.github/workflows/build_deps.yml
    with:
      cache-key: ${{ needs.check_cache.outputs.cache-key }}
      cache-path: ${{ needs.check_cache.outputs.cache-path }}
      valid-cache: ${{ needs.check_cache.outputs.valid-cache == 'true' }}
      os: ${{ inputs.os }}
      arch: ${{ inputs.arch }}
      build-deps-only: ${{ inputs.build-deps-only }}
      target_arch: ${{ inputs.target_arch }} # Pass target_arch through
    secrets: inherit
